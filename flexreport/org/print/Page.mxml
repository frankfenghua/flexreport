<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * ============================================================================
 * GNU Lesser General Public License
 * ============================================================================
 *
 * FlexReport - Free Flex report-generating library.
 * Copyright (C) 2008 Frederico Garcia
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 * 
 * Frederico Garcia
 * fmotagarcia@kemelyon.com
 * http://www.kemelyon.com
 */
 
/*
 * Contributors:
 * 
 */
 -->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	backgroundColor="#FFFFFF" 
	borderColor="#FFFFFF" 
	themeColor="#FFFFFF"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off">
	
	<mx:Metadata>
        [Event(name="complete",type="flash.events.Event")]	
	</mx:Metadata>
		
	<mx:Script>
		<![CDATA[
			import org.doc.PaperFormat;
			
			public static const FIRST_PAGE:uint = 0;
			public static const MIDDLE_PAGE:uint = 1;
			public static const LAST_PAGE:uint = 2;
						
			public var number:int;
			
			[Bindable] private var _source:ByteArray;		
			public function set source(value:ByteArray):void
			{
				_source = value;
				
				verticalScrollPosition = 0;
				
				if(_paperFormat!==null) {
					load();
				}
				
				dispatchEvent(new Event("sourceChanged"));
			}
			
			[Bindable(event="sourceChanged")]
			public function get source():ByteArray
			{
				return _source;
			}	
					
			[Bindable] private var _paperFormat:PaperFormat;
			public function set paperFormat(value:PaperFormat):void {
				_paperFormat = value;
				
				if(printPreview!==null)
				{
					height = _paperFormat.height;
					width = _paperFormat.width;	
				}
				
				load();			
			}
			
			[Bindable] private var _bitmap:Bitmap;
			private function load():void {
				var loader:Loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loadCompleteHandler);

				loader.loadBytes(_source);
			}
				
			private function loadCompleteHandler(event:Event):void {
				var loader:Loader = Loader(event.target.loader);
				_bitmap = Bitmap(loader.content);
				
				render();

				dispatchEvent(new Event(Event.COMPLETE));
			}
			
			private var _smoothBitmap:Bitmap;
			public function render():void {
				var bd:BitmapData = new BitmapData(_bitmap.width, _bitmap.height, false);
				var m:Matrix = new Matrix();

				bd.draw(_bitmap,m);	
				
				_smoothBitmap = new Bitmap(bd);			
				_smoothBitmap.smoothing = true;
				
				printPreview.source = _smoothBitmap;
			}
										        
	        public function get bitmapData():BitmapData {
	        	return _bitmap!==null?_bitmap.bitmapData:null;
	        }			
		]]>
	</mx:Script>
	<mx:Image id="printPreview" left="0" right="0" top="0" bottom="0"/>
	<mx:filters> 
	    <flash.filters:DropShadowFilter id='dropShadowFilter' xmlns:flash.filters='flash.filters.*' 
	      	angle='0'
	        blurX='8' blurY='8'
	        distance='0'
	        alpha='0.3' color='#000000' 
	        knockout='false' quality='2'
	        strength='2' inner='false' hideObject='false'/> 
	</mx:filters>
</mx:Canvas>
