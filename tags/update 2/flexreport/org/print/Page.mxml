<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * ============================================================================
 * GNU Lesser General Public License
 * ============================================================================
 *
 * FlexReport - Free Flex report-generating library.
 * Copyright (C) 2008 Frederico Garcia
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 * 
 * Frederico Garcia
 * fmotagarcia@kemelyon.com
 * http://www.kemelyon.com
 */
 
/*
 * Contributors:
 * 
 */
 -->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="400" 
	height="300" 
	backgroundColor="#c0c0c0" 
	currentState="horizontal">
	
	<mx:states>
		<mx:State name="horizontal">
			<mx:SetStyle target="{printPreview}" name="horizontalCenter" value="0"/>
			<mx:SetProperty target="{printPreview}" name="scaleContent" value="true"/>
			<mx:SetStyle name="backgroundColor" value="#f0f0f0"/>
		</mx:State>
		<mx:State name="left">
			<mx:SetStyle target="{printPreview}" name="left" value="0"/>
			<mx:SetStyle target="{printPreview}" name="horizontalCenter"/>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			[Bindable]
			private var _source:Bitmap;
			public function set source(value:Bitmap):void
			{
				_source = _scaledBmp = value;
				verticalScrollPosition = 0;
				dispatchEvent(new Event("sourceChanged"));
			}
			
			[Bindable(event="sourceChanged")]
			public function get source():Bitmap
			{
				return _source;
			}
			
			[Bindable]
			private var _scaledBmp:Bitmap;
			
            [Bindable]
            public var zoom:Number = 1;
            
            private var zoomList:Array =  [.25,.5,.75,1,1.5,2];
            private var zoomPosition:int = 3;
            
            private var originalWidth:Number;
            private var originalHeight:Number;
            
            public function zoomIn():void
            {
            	if (zoom === 1) {
            		originalWidth = source.width;
            		originalHeight = source.height;
            	}
            	
            	if (zoomPosition < zoomList.length-1) {
            		zoomPosition++;
            		zoom = zoomList[zoomPosition];
           		
           			//_scaledBmp = scale(_source);
           			
            		printPreview.height = originalHeight * zoom;
            		printPreview.width = originalWidth * zoom;

            		if (width < printPreview.width) {
            			align("left");
            		} else {
            			align("center");
            		}
            	}
            }
            
            public function zoomOut():void
            {
            	if (zoom === 1) {
            		originalWidth = source.width;
            		originalHeight = source.height;
            	}
            	            	
             	if (zoomPosition > 0) {
            		zoomPosition--;
            		zoom = zoomList[zoomPosition];
           		
           			//_scaledBmp = scale(_source);

            		printPreview.height = originalHeight * zoom;
            		printPreview.width = originalWidth * zoom;
            		
             		if (width < printPreview.width) {
            			align("left");
            		} else {
            			align("center");
            		}          		           		
            	}           	
            }
            
/* 		private function scale(target:Bitmap):Bitmap
		{
			var matrix:Matrix = new Matrix();
			var bd:BitmapData = new BitmapData(target.width*zoom, target.height*zoom);
			
			matrix.scale(zoom,zoom);
			bd.draw(target, matrix);
					
			var result:Bitmap = new Bitmap(bd);
			
			return result;			
		} */
		            			
        private function align(anchor:String):void
        {
        	if (anchor === "center") {
				   currentState = 'horizontal';     		
        	} else if (anchor === "left") {
				   currentState = 'left';        		
        	}
        	updateDisplayList(unscaledWidth,unscaledHeight);
        }			
		]]>
	</mx:Script>
	<mx:Image width="595" height="842" id="printPreview" top="10" source="{_scaledBmp}" horizontalCenter="0">
		<mx:filters> 
		    <flash.filters:DropShadowFilter id='dropShadowFilter' xmlns:flash.filters='flash.filters.*' 
		      	angle='0'
		        blurX='8' blurY='8'
		        distance='0'
		        alpha='0.3' color='#000000' 
		        knockout='false' quality='2'
		        strength='2' inner='false' hideObject='false'/>
		          
		</mx:filters>		
	</mx:Image>
</mx:Canvas>
