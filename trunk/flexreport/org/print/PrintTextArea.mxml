<?xml version="1.0" encoding="utf-8"?>
<!--
/*
 * ============================================================================
 * GNU Lesser General Public License
 * ============================================================================
 *
 * FlexReport - Free Flex report-generating library.
 * Copyright (C) 2008 Frederico Garcia
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307, USA.
 * 
 * Frederico Garcia
 * fmotagarcia@kemelyon.com
 * http://www.kemelyon.com
 */
 
/*
 * Contributors:
 * 
 */
 -->
<mx:TextArea xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	change="invalidateSize()"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off" 
	borderStyle="none"
	color="#000000">

  <mx:Script>
  	<![CDATA[
		public function get validNextPage():Boolean
		{			
			var nextPosition:int = verticalScrollPosition + numLines - maxVerticalScrollPosition;	
		
			return (nextPosition<numLines) ? true : false;
		}   
		
		private var originalPercentHeight:Number;
		private var originalHeight:Number;
		
		public function nextPage():void
		{	
			if (validNextPage) {
				if (!isNaN(percentHeight)) {
					originalPercentHeight = percentHeight;
				}
				else if (!isNaN(height)) {
					originalHeight = height;
				}
				
				var nextPosition:int = verticalScrollPosition + numLines - maxVerticalScrollPosition;
				
				if (nextPosition < maxVerticalScrollPosition) {
					verticalScrollPosition = nextPosition;
				}
				else {			
					var nextHeight:Number = 0;
					
					for (var i:int = nextPosition - 1; i < numLines; i++) {
						nextHeight += getLineMetrics(i).height;
					}
					
					if (isNaN(originalHeight)) originalHeight = height;
					
					height = nextHeight;
					validateNow();
					
					verticalScrollPosition = maxVerticalScrollPosition;
					
				}
			}
		}
		
		override public function set htmlText(value:String):void
		{
			super.htmlText = value;
		}
		
		override public function get htmlText():String
		{
			return super.htmlText;
		}
		
		public function reset():void
		{
			if (!isNaN(originalPercentHeight)) {
				percentHeight = originalPercentHeight;
			}
			else if (!isNaN(originalHeight)) {
				height = originalHeight;
			}
			
			verticalScrollPosition = 0;
			
			invalidateProperties();
			validateNow();
		}
		
		private function get numLines():Number
		{
			invalidateProperties();
			validateNow();
			
			return textField.numLines;
		}			
	]]>	    
  </mx:Script>
</mx:TextArea> 